{"version":3,"sources":["Components/OneQuote.js","Components/MultipleQuotes.js","App.js","index.js"],"names":["OneQuote","data","requestMore","Flex","direction","width","PseudoBox","verticalAlign","fontWeight","fontSize","px","lineHeight","position","color","_before","content","display","left","borderLeftWidth","borderLeftColor","height","quoteText","mt","py","cursor","_hover","background","right","top","alignItems","onClick","quoteAuthor","quoteGenre","MultipleQuotes","className","Box","mb","map","quote","i","key","my","App","useState","setData","more","setMore","fetchData","a","fetch","res","json","fetchDataByAuthor","author","quotes","useEffect","mx","fontFamily","minHeight","Heading","alignSelf","Button","rightIcon","variant","size","ReactDOM","render","StrictMode","ThemeProvider","CSSReset","document","getElementById"],"mappings":"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","file":"static/js/main.bc2090d2.chunk.js","sourcesContent":["import React from \"react\";\nimport { Flex, PseudoBox } from \"@chakra-ui/core\";\n\nconst OneQuote = ({ data, requestMore }) => {\n  return (\n    <Flex direction=\"column\" width=\"100%\">\n      <PseudoBox\n        verticalAlign=\"middle\"\n        fontWeight=\"normal\"\n        fontSize={[\"lg\", \"xl\", \"2xl\", \"3xl\"]}\n        px=\"5\"\n        lineHeight=\"tall\"\n        position=\"relative\"\n        color=\"white\"\n        _before={{\n          content: `\"\"`,\n          position: \"absolute\",\n          display: \"block\",\n          left: \"-5%\",\n          borderLeftWidth: \"0.5rem\",\n          borderLeftColor: \"#FF893B\",\n          height: \"100%\",\n        }}\n      >\n        {data.quoteText}\n      </PseudoBox>\n      <PseudoBox\n        mt={[\"4\", \"8\"]}\n        fontWeight=\"bold\"\n        px=\"5\"\n        py=\"10\"\n        position=\"relative\"\n        cursor=\"pointer\"\n        color=\"teal.200\"\n        _hover={{\n          background: \"#FF893B\",\n          color: \"white\",\n          \"&:after\": {\n            content: '\"\\u2192\"',\n            position: \"absolute\",\n            right: \"5%\",\n            fontSize: \"3rem\",\n            top: \"0\",\n            height: \"90%\",\n            display: \"flex\",\n            alignItems: \"center\",\n          },\n        }}\n        onClick={() => requestMore(data.quoteAuthor)}\n      >\n        <PseudoBox fontSize={[\"sm\", \"md\", \"lg\", \"xl\"]}>\n          {data.quoteAuthor}\n        </PseudoBox>\n        <PseudoBox\n          fontWeight=\"normal\"\n          fontSize={[\"xs\", \"sm\", \"md\"]}\n          color=\"white\"\n        >\n          {data.quoteGenre}\n        </PseudoBox>\n      </PseudoBox>\n    </Flex>\n  );\n};\n\nexport default OneQuote;\n","import React from \"react\";\nimport { Flex, Box, PseudoBox } from \"@chakra-ui/core\";\n\nconst MultipleQuotes = ({ data }) => {\n  return (\n    <Flex direction=\"column\" width=\"100%\" className=\"quotes-page\">\n      <Box\n        fontSize={[\"lg\", \"xl\", \"2xl\"]}\n        fontWeight=\"bold\"\n        mb=\"5%\"\n        px=\"5\"\n        color=\"teal.200\"\n      >\n        {data[0].quoteAuthor}\n      </Box>\n      {data.map((quote, i) => (\n        <PseudoBox\n          verticalAlign=\"middle\"\n          fontWeight=\"normal\"\n          fontSize={[\"lg\", \"xl\", \"2xl\", \"3xl\"]}\n          position=\"relative\"\n          _before={{\n            content: `\"\"`,\n            position: \"absolute\",\n            display: \"block\",\n            left: \"-5%\",\n            borderLeftWidth: \"0.5rem\",\n            borderLeftColor: \"#FF893B\",\n            height: \"100%\",\n          }}\n          px=\"5\"\n          lineHeight=\"tall\"\n          color=\"white\"\n          key={i}\n          my={[\"4\", \"8\"]}\n        >\n          {quote.quoteText}\n        </PseudoBox>\n      ))}\n    </Flex>\n  );\n};\n\nexport default MultipleQuotes;\n","// Core\nimport React, { useEffect, useState } from \"react\";\nimport { Flex, Box, Button, Heading } from \"@chakra-ui/core\";\n\n// Components\nimport OneQuote from \"./Components/OneQuote\";\nimport MultipleQuotes from \"./Components/MultipleQuotes\";\n\nfunction App() {\n  // State Management\n  const [data, setData] = useState(\"react\");\n  const [more, setMore] = useState(false);\n\n  // Fetch Single Random Quote\n  const fetchData = async () => {\n    const res = await fetch(\n      \"https://quote-garden.herokuapp.com/api/v2/quotes/random\"\n    );\n    const json = await res.json();\n    const quote = json.quote;\n\n    setMore(false);\n    setData(quote);\n  };\n\n  // Fetch All Quotes by Author\n  const fetchDataByAuthor = async (author) => {\n    const res = await fetch(\n      `https://quote-garden.herokuapp.com/api/v2/authors/${author}`\n    );\n    const json = await res.json();\n    const quotes = json.quotes;\n\n    setData(quotes);\n    setMore(true);\n  };\n\n  // Fetch Single Data point on page load\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <Box\n      width={[\"80%\", \"60%\"]}\n      mx=\"auto\"\n      fontFamily=\"Raleway\"\n      color=\"gray.800\"\n      position=\"relative\"\n      minHeight=\"100vh\"\n    >\n      <Flex direction=\"column\" width=\"100%\">\n        <Heading\n          alignSelf=\"center\"\n          fontFamily=\"Raleway\"\n          mt={[\"4\", \"8\"]}\n          color=\"teal.200\"\n        >\n          Random Quote Generator\n        </Heading>\n        <Box mt=\"6\" alignSelf=\"flex-end\" mb={[\"25%\", \"20%\", \"15%\", \"10%\"]}>\n          <Button\n            rightIcon=\"repeat\"\n            variant=\"ghost\"\n            size=\"md\"\n            color=\"#FF893B\"\n            fontWeight=\"normal\"\n            onClick={fetchData}\n            _hover={{\n              background: \"#FF893B\",\n              color: \"white\",\n            }}\n          >\n            Random\n          </Button>\n        </Box>\n\n        {/* Conditional Rendering */}\n        {more === false ? (\n          <OneQuote data={data} requestMore={fetchDataByAuthor} />\n        ) : (\n          <MultipleQuotes data={data} />\n        )}\n      </Flex>\n    </Box>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider, CSSReset } from \"@chakra-ui/core\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <CSSReset />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}